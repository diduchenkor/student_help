import sqlite3

from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from keyboards.default.knopki import choose_university, choose_fackelti

from aiogram.types import InputFile

from keyboards.inline.new_menu import big_dick, send_bot
from photos import *
from keyboards.inline.inline_botton import firs, thri, second
from loader import dp, db, bot


@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    name = message.from_user.full_name
    try:
        db.add_user(id=message.from_user.id, name=name)
    except sqlite3.IntegrityError as err:
        print(err)
    await message.answer(
        "\n".join(
            [
                f"–ü—Ä–∏–≤—ñ—Ç, {message.from_user.full_name}! üòé",
                f"–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –Ω–∞–≤—á—è–ª—å–Ω–∏–π –∑–∞–∫–ª–∞–¥ \n"
                f"üëá"
            ]
        ), reply_markup=choose_university
    )


@dp.message_handler(text="–ù–ê–¢–Ü –ù–£–ë–Ü–ü üöú")
async def choose_fekelti(message: types.Message):
    await message.answer((f"–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥ \n"
                         f"–í–∏–±–µ—Ä—ñ—Ç—å —Ñ–∞–∫—É–ª—å—Ç–µ—Ç"), reply_markup=choose_fackelti)


@dp.message_handler(text="–Ü–ù–ñ–ï–ù–ï–†–Ü–á –¢–ê –ï–ù–ï–†–ì–ï–¢–ò–ö–ò - –ë–ú, –ë–ú—Å–∫, –ú–ê üìó")
async def grupa_one(message: types.Message):
    photo = InputFile(path_or_bytesio="photos/1.png")
    await bot.send_photo(chat_id=message.from_user.id, photo=photo, caption=("<b>–Ü–ù–ñ–ï–ù–ï–†–Ü–á –¢–ê –ï–ù–ï–†–ì–ï–¢–ò–ö–ò - –ë–ú, –ë–ú—Å–∫, –ú–ê üìó</b>"), reply_markup=firs)


@dp.message_handler(text="–Ü–ù–ñ–ï–ù–ï–†–Ü–á –¢–ê –ï–ù–ï–†–ì–ï–¢–ò–ö–ò - –ë–ï, –ë–ï—Å–∫, –ú–ï üìò")
async def grupa_two(message: types.Message):
    photo = InputFile(path_or_bytesio="photos/2.png")
    await bot.send_photo(chat_id=message.from_user.id, photo=photo, caption=("<b>–Ü–ù–ñ–ï–ù–ï–†–Ü–á –¢–ê –ï–ù–ï–†–ì–ï–¢–ò–ö–ò - –ë–ú, –ë–ú—Å–∫, –ú–ê üìó</b>"), reply_markup=second)



@dp.message_handler(text="–ê–ì–†–ï–¢–ï–•–ù–û–õ–û–ì–Ü–ô –¢–ê –ï–ö–û–ù–û–ú–Ü–ö–ò  üìï")
async def grupa_thri(message: types.Message):
    photo = InputFile(path_or_bytesio="photos/3.png")
    await bot.send_photo(chat_id=message.from_user.id, photo=photo, caption=("<b>–Ü–ù–ñ–ï–ù–ï–†–Ü–á –¢–ê –ï–ù–ï–†–ì–ï–¢–ò–ö–ò - –ë–ú, –ë–ú—Å–∫, –ú–ê üìó</b>"), reply_markup=thri)


@dp.message_handler(text="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ üöÄ")
async def new_whole(message: types.Message):
    await message.answer("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—ó", reply_markup=big_dick)


@dp.callback_query_handler(text_contains="big1")
async def statistic_user(call: types.CallbackQuery):
    count = db.count_users()[0]
    await call.message.answer(f"–ü—Ä–∏–≤–µ—Ç —á—É–≤–∞–∫, –¥–∞ —á—É–≤–∞–∫!'\n"
                              f"–í —Ü—å–æ–º—É –±–æ—Ç—ñ –≤—Å—ñ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—ñ —á—É–≤–∞–∫—ñ!üë®‚Äçüéì\n"
                              f"–ß–æ–º—É —á—É–≤–∞–∫?üë®‚Äçüéì\n"
                              f"–ï—Å–ª—ñ —Ç–∏ –Ω–æ—Ä–º —á—É–≤–∞–∫ —Ç–æ —Ç–∏ –ø–æ–Ω—ñ–º–∞–µ—à —á–æ–≥–æ üòé \n\n"
                              f"–ë–æ—Ç–æ–º –ø–æ–ª—å–∑—É—é—Ç—å—Å—è: \n"
                              f"<b>{count}</b> - –ß—É–≤–∞–∫—ñ–≤")


@dp.callback_query_handler(text_contains="big2")
async def send_friends(call: types.CallbackQuery):
    await call.message.answer("–©–æ–± –¥–æ–ø–æ–º–æ–≥—Ç–∏ –¥—Ä—É–≥—É, –∂–º–∏ üëáüèª", reply_markup=send_bot)


@dp.callback_query_handler(text_contains="big3")
async def myself(call: types.CallbackQuery):
    await call.message.answer(f"–ù–∞–±–æ–≥–∞—Ç–æ –∫—Ä–∞—â–µ –∏ —É–¥–æ–±–Ω—ñ—à–µ\n"
                              f"–ü–æ–ª—É—á—è—Ç—å —Ä–æ–∑–∫–ª–∞–¥ –≤ –±–æ—Ç—ñ\n"
                              f"–¶–µ–π –±–æ—Ç –µ–∫–æ–Ω–æ–º–∏—Ç—å –≤–∞—à–µ –≤—Ä–µ–º—è\n"
                              f"\n\n\n"
                              f"Python programming language\n"
                              f"Aiogram construction library\n"
                              f"Creator @mentorsx"
                              )